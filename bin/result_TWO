#!/usr/bin/env python


import rospy

import matplotlib.pyplot as plt

import matplotlib.style as sty

import os
import statistics
sty.use("seaborn")

from front_end.analysis import getTopic
import numpy as np




inFolder="/home/ryan/recording/i7/BRIEF"
bagFiles=["750.bag","1500.bag","3000.bag","5000.bag"]#,"jetson_5000.bag","jetson_7000.bag"]




processor=["i7","jetson"]
features=["BRIEF_16","BRIEF_64","SURF","SURF_EXTENDED","FREAK","ORB_10","ORB_70"]#,"BRIEF_64",
colours=[(0.6,0.4,1,0.7),(0,1,0,0.7),(1,1,0,0.7),(0.5,0.7,0.6),(0.1,0.4,1),(0.2,0.7,0.6),(1,0,0)]


for p in processor:
    fig1,(ax1)=plt.subplots(1,1,squeeze=True)
    fig1.suptitle(p)
    ax1.set_xlabel("Descriptor and Matching Processing Time (ms)")
    ax1.set_ylabel("Total Detections")
    ax1.set_xlim(0,1000)
    for descriptor in range(len(features)):
        inDir="/home/ryan/recording/"+p+"/"+features[descriptor]
        files=os.listdir(inDir)
        for f in range(len(files)):
            print(inDir+"/"+files[f])
            data=getTopic(inDir+"/"+files[f],"/stereo/debug/detection")
            time=np.array(getTopic(inDir+"/"+files[f],"/stereo/time/matches"))
            #time2=np.array(getTopic(inDir+"/"+files[f],"/stereo/time/description"))
            #time3=time+time2
            inC=colours[descriptor]
            if(f==0):
                ax1.scatter(np.array(time)*1000,data,s=6,color=inC,label=features[descriptor])
                ax1.legend()
            else:
                ax1.scatter(np.array(time)*1000,data,s=6,color=inC)

plt.tight_layout()



plt.show()

