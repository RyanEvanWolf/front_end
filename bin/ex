#!/usr/bin/env python
from front_end.utils import *
from dataset.utils import Directories,unpackBag
from cv_bridge import CvBridge
import pickle
import argparse
import cv2
cvb=CvBridge()

parser =argparse.ArgumentParser()
parser.add_argument("rootDir")
parser.add_argument("loopID")
parser.add_argument("--output_directory",default="/media/ryan/EXTRA/output")
args,unknown=parser.parse_known_args()


projectFolder=Directories(args.rootDir,args.output_directory) 

pickleDir=projectFolder.getCurvePickle(args.loopID)

print("loading Data from "+pickleDir)
inputPickle=open(pickleDir,"rb")
dataIn=pickle.load(inputPickle)
inputPickle.close()
print("Data Loaded")


Bag=unpackBag(projectFolder.getBagPath(args.loopID),5)
fast=cv2.FastFeatureDetector_create()
limg=cvb.imgmsg_to_cv2(Bag["Left"][0])
rimg = cvb.imgmsg_to_cv2(Bag["Right"][0])


lk=fast.detect(limg)

rk=fast.detect(rimg)


small=[]

for a in range(0,10):
    small.append(lk[a])
    print(small[-1].pt[0],"x")
    print(small[-1].pt[1],"y")
li=cv2.drawKeypoints(limg,small,None)
cv2.imshow("a",li)
print(len(lk),len(rk))
cv2.waitKey(0)
# import cv2
# import numpy as np

# from front_end.utils import ros2cv_KP,cv2ros_KP,getBRIEF_Attributes,getDescriptor,printFormattedKP
# from front_end.msg import kPoint
# img=cv2.imread("/home/ryan/DATA3/A/01097.ppm",cv2.IMREAD_GRAYSCALE)
# cv2.cvtColor(img,cv2.COLOR_BayerBG2GRAY,img)
# fast=cv2.FastFeatureDetector_create()

# p,pp=getBRIEF_Attributes()
# kp=fast.detect(img)
# print(type(kp))

# msg=cv2ros_KP(kp[0])

# u=ros2cv_KP(msg)

# print(type(img))
# img2=cv2.drawKeypoints(img, kp,img)

# cv2.imshow("a",img2)

# s=cv2.xfeatures2d.BriefDescriptorExtractor_create(32)

# s3=cv2.BRISK_create()

# print(printFormattedKP(u))

# print(s.compute(img,[u]))


# for i in pp:
#     print(i)
#     t,s=getDescriptor(i)
#     print(s.compute(img,[u,u],None))
#     print(s3.compute(img,[u],None))
# cv2.waitKey(2000)
