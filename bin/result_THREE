#!/usr/bin/env python


import rospy

import matplotlib.pyplot as plt

import matplotlib.style as sty

import os
import statistics
sty.use("seaborn")

from front_end.analysis import getTopic

import matplotlib.patches as mpatches
import numpy as np
import matplotlib as mpl
label_size = 18
mpl.rcParams['xtick.labelsize'] = label_size 
mpl.rcParams['ytick.labelsize'] = label_size 
processor="i7"
features=["BRIEF_16","BRIEF_64","SURF","SURF_EXTENDED","FREAK","ORB_10","ORB_70"]#,"BRIEF_64",
colours=[(0.6,0.4,1,0.8),(0,1,0,0.8),(1,1,0,0.8),(1,0.7,0.6,0.8),(0.1,0.4,1,0.8),(0.2,0.7,0.6,0.8),(1,0,0,0.8)]
noisePatches=[]
for i in range(len(features)):
    noisePatches.append(mpatches.Patch(color=colours[i],label=features[i]))
#(0.5,0.7,0.6),(0.1,0.4,1),(0.2,0.7,0.6),(1,0,0)]
outFolder="/home/ryan/outImages/detection"

for descriptor in range(len(features)):
    inDir="/home/ryan/recording/A3/"+processor+"/"+features[descriptor]
    files=os.listdir(inDir)
    for f in range(len(files)):
        data=getTopic(inDir+"/"+files[f],"/stereo/debug/matches")
        time=np.arange(0,len(data))/float(len(data))
        if(f==0):
            plt.plot(time,data,linewidth=2,color=colours[descriptor],label=features[descriptor])
            plt.legend()
            print(features[descriptor],files[f])
        else:
            plt.plot(time,data,linewidth=2,color=colours[descriptor])
            print(features[descriptor],files[f])
    #print(features[descriptor],files)


#plt.suptitle("Total Stereo Matches on $A_3^{Slow}$",fontsize=20)
# plt.xlabel("Normalized Frame Number",fontsize=16)
# plt.ylabel("Total Matches",fontsize=16)
plt.legend(handles=noisePatches,fontsize=14)


plt.savefig(outFolder+"/stereo.png",bbox_inches='tight')
# inFolder="/home/ryan/recording/i7/BRIEF"
# bagFiles=["750.bag","1500.bag","3000.bag","5000.bag"]#,"jetson_5000.bag","jetson_7000.bag"]

# plt.tight_layout()
# # for rosbag in bagFiles:
# #     plt.plot(getTopic(inFolder+"/"+rosbag,"/stereo/debug/detection"),linewidth=0.7)#getTopic(inFolder+"/"+rosbag,"/stereo/debug/detection"))
# plt.show()


